{"version":3,"sources":["components/Navbar.js","components/Sidebar.js","components/Organization.js","components/Notification.js","components/Notifications.js","components/Settings.js","components/Repo.js","components/OrganizationDetails.js","components/Dashboard.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","Fragment","className","href","this","props","user","onClick","logout","Component","PAGE","Sidebar","active","displayDashboard","data-feather","displayNotifications","notificationCounter","Organization","alt","src","avatarURL","name","description","displayDetails","Notification","_this","Object","keys","notification","map","key","link","target","style","width","concat","unseen","renderObj","Notifications","resetCounter","notifications","obj","components_Notification","Settings","state","settings","repository","push","issues","project","release","deployment","fork","repository_vulnerability_alert","handleCheckboxChange","_callee","e","jsonBody","regenerator_default","wrap","_context","prev","next","type","setState","objectSpread","defineProperty","JSON","stringify","org","fetch","method","headers","Content-Type","body","sent","window","sessionStorage","setItem","t0","console","log","stop","getItem","parse","res","status","json","_context2","margin","checked","onChange","Repo","URL","OrganizationDetails","isAdmin","components_Settings","repos","repo","components_Repo","assign","publicVapidKey","DASHBOARD","DETAILS","NOTIFICATIONS","Dashboard","activePage","login","socket","close","nick","credentials","_context3","_this2","WebSocket","addEventListener","event","data","toConsumableArray","reverse","i","organizations","length","hasHook","organization","_context4","isAuthorized","clear","test","_context5","removeNotifications","chosenOrg","value","filter","token","isLoading","setupSocket","setupWebhooks","navigator","send","_context6","_this3","components_Organization","bind","components_OrganizationDetails","components_Notifications","components_Navbar","components_Sidebar","role","aria-pressed","_callee7","register","subscription","_context7","serviceWorker","scope","ready","pushManager","subscribe","userVisibleOnly","applicationServerKey","urlBase64ToUint8Array","content-type","base64String","base64","repeat","replace","rawData","atob","outputArray","Uint8Array","charCodeAt","App","components_Dashboard","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7488d493.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nclass Navbar extends Component {\n  render () {\n    return (\n      <React.Fragment>\n        <nav className='navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow'>\n          <a className='navbar-brand col-sm-3 col-md-2 mr-0' href='#'>{this.props.user}</a>\n          <ul className='navbar-nav px-3'>\n            <li className='nav-item text-nowrap'>\n              <a className='nav-link' href='#' onClick={this.props.logout}>Sign out</a>\n            </li>\n          </ul>\n        </nav>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Navbar\n","\nimport React, { Component } from 'react'\n\nconst PAGE = {\n  DASHBOARD: 0,\n  DETAILS: 1,\n  NOTIFICATIONS: 2\n}\n\nclass Sidebar extends Component {\n  render () {\n    return (\n      <nav className='col-md-2 d-none d-md-block bg-light sidebar'>\n        <div className='sidebar-sticky'>\n          <ul className='nav flex-column'>\n            <li className='nav-item'>\n              <a className={(this.props.active === PAGE.DASHBOARD) ? 'nav-link active' : 'nav-link'} onClick={this.props.displayDashboard} href='#'>\n                <span data-feather='home' />\n                Dashboard\n              </a>\n            </li>\n            <li className='nav-item'>\n              <a className={(this.props.active === PAGE.NOTIFICATIONS) ? 'nav-link active' : 'nav-link'} onClick={this.props.displayNotifications} href='#'>\n                <span data-feather='home' />\n                Notifications <span className='badge badge-light'>{this.props.notificationCounter}</span>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    )\n  }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\n\nclass Organization extends Component {\n  render () {\n    return (\n      <React.Fragment>\n        <div className='card' >\n          <img className='card-img-top' alt='organization avatar' src={this.props.avatarURL} />\n          <div className='card-body d-flex flex-column'>\n            <h5 className='card-title text-center'>{this.props.name}</h5>\n            <p className='card-text'>{this.props.description}</p>\n            <a href='#' name={this.props.name} onClick={this.props.displayDetails} className='card-link mt-auto text-center'>DETAILS</a>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Organization\n","import React, { Component } from 'react'\n\nclass Notification extends Component {\n  renderObj () {\n    return Object.keys(this.props.notification).map(key => {\n      if (key === 'link') {\n        return (\n          <a href={this.props.notification.link} target='_blank' className='btn btn-primary'>GitHub</a>\n        )\n      } else if (key === 'unseen') {\n        return\n      } else {\n        return (\n          <p className='card-text'>{key}: {this.props.notification[key]}</p>\n        )\n      }\n    })\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        <div className='card mx-auto my-2 text-center' style={{ width: '25rem' }}>\n          <div className={`card-header ${this.props.notification.unseen ? 'unseen' : ''}`} />\n          <div className='card-body'>\n            <h5 className='card-title'>Notification</h5>\n            {this.renderObj()}\n          </div>\n        </div>\n      </React.Fragment >\n    )\n  }\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport Notification from './Notification'\n\nclass Notifications extends Component {\n  componentWillUnmount () {\n    this.props.resetCounter()\n  }\n\n  render () {\n    return (\n      <React.Fragment>\n        {this.props.notifications.map(obj => {\n          return (\n            <Notification notification={obj} />\n          )\n        })}\n      </React.Fragment >\n    )\n  }\n}\n\nexport default Notifications\n","import React, { Component } from 'react'\n\nclass Settings extends Component {\n  state = {\n    settings: {\n      repository: false,\n      push: false,\n      issues: false,\n      project: false,\n      release: false,\n      deployment: false,\n      fork: false,\n      repository_vulnerability_alert: false\n    }\n  }\n\n  async componentDidMount() {\n\n    if (window.sessionStorage.getItem(this.props.org)) {\n      return this.setState({ settings: JSON.parse(window.sessionStorage.getItem(this.props.org)) })\n    }\n\n    try {\n      let res = await fetch(`https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/settings/${this.props.user}/${this.props.org}`)\n      if (res.status === 204) {\n        return\n      }\n\n      res = await res.json()\n\n      this.setState({ settings: res })\n      window.sessionStorage.setItem(this.props.org, JSON.stringify(res))\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  handleCheckboxChange = async (e) => {\n    if (e.target.type === 'checkbox') {\n\n      try {\n\n        await this.setState({\n          settings: { ...this.state.settings, [e.target.name]: !this.state.settings[e.target.name] }\n        })\n\n        const jsonBody = JSON.stringify({\n          user: this.props.user,\n          org: this.props.org,\n          settings: this.state.settings\n        })\n\n        let res = await fetch(`https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/settings`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: jsonBody\n        })\n\n        window.sessionStorage.setItem(this.props.org, JSON.stringify(this.state.settings))\n\n      } catch (err) {\n        console.log(err)\n      }\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className='row justify-content-center'>\n          <h3>Notification settings</h3>\n        </div>\n        <div className='container'>\n          <div className='row'>\n            <div className='col-md-6'>\n              <div className='card' style={{ margin: '50px 0' }}>\n                <ul className='list-group list-group-flush'>\n                  <li className='list-group-item'>\n                    Repositories\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.repository} onChange={this.handleCheckboxChange} name='repository' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Push\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.push} onChange={this.handleCheckboxChange} name='push' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Issues\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.issues} onChange={this.handleCheckboxChange} name='issues' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Projects\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.project} onChange={this.handleCheckboxChange} name='project' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className='col-md-6'>\n              <div className='card' style={{ margin: '50px 0' }}>\n                <ul className='list-group list-group-flush'>\n                  <li className='list-group-item'>\n                    Releases\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.release} onChange={this.handleCheckboxChange} name='release' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Deployments\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.deployment} onChange={this.handleCheckboxChange} name='deployment' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Forks\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.fork} onChange={this.handleCheckboxChange} name='fork' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                  <li className='list-group-item'>\n                    Security Alerts\n                    <label className='switch '>\n                      <input type='checkbox' checked={this.state.settings.repository_vulnerability_alert} onChange={this.handleCheckboxChange} name='repository_vulnerability_alert' className='success' />\n                      <span className='slider round' />\n                    </label>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Settings\n","import React, { Component } from 'react'\n\nclass Repo extends Component {\n  render () {\n    return (\n      <React.Fragment>\n        <div className='card text-center col-sm-6'>\n          <div className='card-header' />\n          <div className='card-body'>\n            <h5 className='card-title'>{this.props.name}</h5>\n            <p className='card-text'>{this.props.description}</p>\n            <a href={this.props.URL} target='_blank' className='btn btn-primary'>{this.props.name} on GitHub</a>\n          </div>\n          <div className='card-footer text-muted' />\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Repo\n","import React, { Component } from 'react'\nimport Settings from './Settings'\nimport Repo from './Repo'\n\nclass OrganizationDetails extends Component {\n  render () {\n    return (\n      <React.Fragment>\n        <h1 className='display-2 text-center'>{this.props.name}</h1>\n\n        {this.props.isAdmin && (\n          <Settings org={this.props.name} user={this.props.user} />)\n        }\n\n        <h1 className='display-4 text-center'>Repos</h1>\n        <div className='row'>\n          {this.props.repos.map(repo => {\n            return (\n              <Repo key={repo.name} {...repo} />\n            )\n          })}\n        </div>\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default OrganizationDetails\n","import React, { Component } from 'react'\nimport Navbar from './Navbar'\nimport Sidebar from './Sidebar'\nimport Organization from './Organization'\nimport Notifications from './Notifications'\nimport OrganizationDetails from './OrganizationDetails'\nimport '../bootstrap-social.css'\n\nconst publicVapidKey = 'BGqqZm74jsX141bCEXum-EePHgPFtTCPdeptiUR7KLQDKr_VfGc6fAu9wTZ9lvD8PyMcsaMqdEFiNvftmbmtZ7o'\n\nconst PAGE = {\n    DASHBOARD: 0,\n    DETAILS: 1,\n    NOTIFICATIONS: 2\n}\n\n\nclass Dashboard extends Component {\n    state = {\n        user: {},\n        activePage: PAGE.DASHBOARD,\n        notifications: [],\n        notificationCounter: 0\n    }\n\n    async componentDidMount() {\n        await this.login()\n    }\n\n    async componentWillUnmount() {\n        this.state.socket.close()\n    }\n\n    async removeNotifications() {\n        try {\n            await fetch('https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/notifications/' + this.state.user.nick, {\n                method: 'DELETE',\n                credentials: 'include'\n            })\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    setupSocket() {\n        this.setState({\n            socket: new WebSocket('wss://3owhikvdr6.execute-api.eu-north-1.amazonaws.com/prod?user=' + this.state.user.nick)\n        })\n\n        this.state.socket.addEventListener('open', event => {\n            console.log('Socket open...')\n        })\n\n        this.state.socket.addEventListener('message', event => {\n            let data = JSON.parse(event.data)\n            this.setState({\n                notificationCounter: this.state.notificationCounter + 1,\n                notifications: [...this.state.notifications, data].reverse()\n            })\n        })\n    }\n\n    async setupWebhooks() {\n        for (let i = 0; i < this.state.user.organizations.length; i++) {\n            if (this.state.user.organizations[i].isAdmin && !this.state.user.organizations[i].hasHook) {\n                try {\n                    let hookResponse = await fetch('https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/webhooks', {\n                        method: 'POST',\n                        credentials: 'include',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: JSON.stringify({\n                            organization: this.state.user.organizations[i].name\n                        })\n                    })\n                } catch (err) {\n                    console.log(err)\n                }\n            }\n        }\n    }\n\n    async logout() {\n        this.setState({\n            user: {},\n            activePage: PAGE.DASHBOARD,\n            isAuthorized: false\n        })\n        window.sessionStorage.clear()\n        this.state.socket.close()\n        try {\n            let test = await fetch('https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/logout', {\n                method: 'POST',\n                credentials: 'include'\n            })\n            console.log(test)\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    resetCounter() {\n        let notifications = [...this.state.notifications]\n        for (let i = 0; i < notifications.length; i++) {\n            notifications[i].unseen = false\n        }\n        this.setState({\n            notifications,\n            notificationCounter: 0\n        })\n        this.removeNotifications()\n    }\n\n    displayDashboard() {\n        this.setState({\n            activePage: PAGE.DASHBOARD,\n            chosenOrg: {}\n        })\n    }\n\n    displayNotifications() {\n        this.setState({\n            activePage: PAGE.NOTIFICATIONS\n        })\n    }\n\n    displayDetails(e) {\n        const value = e.target.name\n        this.setState({\n            activePage: PAGE.DETAILS,\n            chosenOrg: this.state.user.organizations.filter(org => org.name === value)[0]\n        })\n    }\n\n    async login(token) {\n        this.setState({ isLoading: true })\n\n        try {\n            let user = await fetch('https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/getUser', {\n                credentials: 'include'\n            })\n\n            if (user.status === 401) {\n                this.setState({ isLoading: false })\n                return\n            }\n\n            if (user.status === 200) {\n                user = await user.json()\n\n                this.setState({\n                    isLoading: false,\n                    isAuthorized: true,\n                    user: {\n                        nick: user.nick,\n                        avatarURL: user.avatarURL,\n                        organizations: user.organizations\n                    },\n                    notificationCounter: user.notifications.length,\n                    notifications: user.notifications\n                })\n                await this.setupSocket()\n                await this.setupWebhooks()\n\n                if ('serviceWorker' in navigator) {\n                    send(user.nick)\n                }\n            }\n        } catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        if (this.state.isLoading) {\n            return (\n                <div className=\"text-center login-div\">\n                    <span>Loading...</span>\n                </div>\n            )\n        }\n        else if (this.state.isAuthorized) {\n            let activePage\n            if (this.state.activePage === PAGE.DASHBOARD) {\n                activePage = <div className=\"card-columns\">\n                    {this.state.user.organizations.map(org => {\n                        return (\n                            <Organization key={org.name} {...org} displayDetails={this.displayDetails.bind(this)} />\n                        )\n                    })}\n                </div>\n            }\n\n            if (this.state.activePage === PAGE.DETAILS) {\n                activePage = <OrganizationDetails {...this.state.chosenOrg} user={this.state.user.nick} token={this.state.user.token} />\n            }\n\n            if (this.state.activePage === PAGE.NOTIFICATIONS) {\n                activePage = <Notifications notifications={this.state.notifications} resetCounter={this.resetCounter.bind(this)} />\n            }\n\n            return (\n                <React.Fragment>\n                    <Navbar user={this.state.user.nick} logout={this.logout.bind(this)} />\n\n                    <div className=\"container-fluid\">\n                        <div className=\"row\">\n                            <Sidebar\n                                active={this.state.activePage}\n                                displayDashboard={this.displayDashboard.bind(this)}\n                                displayNotifications={this.displayNotifications.bind(this)}\n                                notificationCounter={this.state.notificationCounter}\n                            />\n                            <main role=\"main\" className=\"col-md-9 ml-sm-auto col-lg-10 px-4\">\n                                <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n                                    <h1 className=\"h2\">Dashboard</h1>\n                                    <img src={this.state.user.avatarURL} className=\"user-avatar rounded-circle float-right\" alt=\"user avatarxx\" />\n                                </div>\n\n                                {activePage}\n                            </main>\n                        </div>\n                    </div>\n                </React.Fragment>\n            )\n        } else {\n            return (\n                <div className=\"text-center login-div\">\n                    <a href='https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/auth' className=\"btn btn-github btn-lg active\" role=\"button\" aria-pressed=\"true\">Login at Github</a>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Dashboard\n\nasync function send(user) {\n    const register = await navigator.serviceWorker.register('serviceWorker.js', {\n        scope: '/'\n    })\n\n    await navigator.serviceWorker.ready\n\n    const subscription = await register.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n    })\n\n    await fetch('https://8i58zxdosl.execute-api.eu-north-1.amazonaws.com/prod/register', {\n        method: 'POST',\n        body: JSON.stringify({\n            subscription,\n            user\n        }),\n        headers: {\n            'content-type': 'application/json'\n        }\n    })\n}\n\nfunction urlBase64ToUint8Array(base64String) {\n    const padding = '='.repeat((4 - base64String.length % 4) % 4)\n    const base64 = (base64String + padding)\n        .replace(/\\-/g, '+')\n        .replace(/_/g, '/')\n\n    const rawData = window.atob(base64)\n    const outputArray = new Uint8Array(rawData.length)\n\n    for (let i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i)\n    }\n    return outputArray\n}","import React, { Component } from 'react'\nimport Dashboard from './components/Dashboard.js'\n\nclass App extends Component {\n  render () {\n    return (\n      <React.Fragment>\n        <Dashboard />\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}